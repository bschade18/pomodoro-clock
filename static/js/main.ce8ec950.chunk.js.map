{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["accurateInterval","window","fn","time","cancel","nextAt","timeout","wrapper","Date","getTime","setTimeout","clearTimeout","call","undefined","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","state","timerLabel","breakLength","sessionLength","timer","start","intervalID","startPause","bind","assertThisInitialized","countdown","reset","startCountdown","clockUpdater","breakInc","breakDec","sessionInc","sessionDec","defBreakLength","defSessionLength","playBeep","pauseBeep","setState","minutes","Math","floor","seconds","_this2","prevState","document","getElementById","play","beep","pause","currentTime","react_default","a","createElement","id","clock","class","onClick","src","React","Component","Boolean","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ce8ec950.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\n\nconst accurateInterval = window.accurateInterval;\n\n(function() {\n  window.accurateInterval = function(fn, time) {\n    var cancel, nextAt, timeout, wrapper;\n    nextAt = new Date().getTime() + time;\n    timeout = null;\n    wrapper = function() {\n      nextAt += time;\n      timeout = setTimeout(wrapper, nextAt - new Date().getTime());\n      return fn();\n    };\n    cancel = function() {\n      return clearTimeout(timeout);\n    };\n    timeout = setTimeout(wrapper, nextAt - new Date().getTime());\n    return {\n      cancel: cancel\n    };\n  };\n}.call(this));\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      timerLabel: \"Session\",\n      breakLength: 5,\n      sessionLength: 25,\n      timer: 1500,\n      start: false,\n      intervalID: \"\"\n    };\n    this.startPause = this.startPause.bind(this);\n    this.countdown = this.countdown.bind(this);\n    this.reset = this.reset.bind(this);\n    this.startCountdown = this.startCountdown.bind(this);\n    this.clockUpdater = this.clockUpdater.bind(this);\n    this.breakInc = this.breakInc.bind(this);\n    this.breakDec = this.breakDec.bind(this);\n    this.sessionInc = this.sessionInc.bind(this);\n    this.sessionDec = this.sessionDec.bind(this);\n    this.defBreakLength = this.defBreakLength.bind(this);\n    this.defSessionLength = this.defBreakLength.bind(this);\n\n    this.playBeep = this.playBeep.bind(this);\n    this.pauseBeep = this.pauseBeep.bind(this);\n  }\n\n  breakInc() {\n    if (this.state.breakLength <= 59 && this.state.start == false) {\n      this.setState({\n        breakLength: this.state.breakLength + 1\n      });\n    }\n  }\n  breakDec() {\n    if (this.state.breakLength >= 2 && this.state.start == false) {\n      this.setState({\n        breakLength: this.state.breakLength - 1\n      });\n    }\n  }\n  sessionInc() {\n    if (this.state.sessionLength <= 59 && this.state.start == false) {\n      this.setState({\n        sessionLength: this.state.sessionLength + 1,\n        timer: this.state.timer + 60\n      });\n    }\n  }\n  sessionDec() {\n    if (this.state.sessionLength >= 2 && this.state.start == false) {\n      this.setState({\n        sessionLength: this.state.sessionLength - 1,\n        timer: this.state.timer - 60\n      });\n    }\n  }\n  defBreakLength() {\n    this.setState({\n      breakLength: 5\n    });\n  }\n\n  defSessionLength() {\n    this.setState({\n      sessionLength: 25\n    });\n  }\n  startPause() {\n    if (this.state.start) {\n      this.setState({\n        start: false\n      });\n      this.state.intervalID && this.state.intervalID.cancel();\n    } else {\n      this.startCountdown();\n      this.setState({\n        start: true\n      });\n    }\n  }\n  clock() {\n    let minutes = Math.floor(this.state.timer / 60);\n    let seconds = this.state.timer - minutes * 60;\n    minutes = minutes < 10 ? \"0\" + minutes : minutes;\n    seconds = seconds < 10 ? \"0\" + seconds : seconds;\n    return minutes + \":\" + seconds;\n  }\n\n  startCountdown() {\n    this.setState({\n      intervalID: accurateInterval(() => {\n        this.countdown();\n        this.clockUpdater();\n      }, 1000)\n    });\n  }\n\n  clockUpdater() {\n    if (this.state.timer < 0) {\n      if (this.state.timerLabel == \"Session\") {\n        this.setState({\n          timer: this.state.breakLength * 60,\n          timerLabel: \"Break\"\n        });\n        this.playBeep();\n      } else {\n        this.setState({\n          timer: this.state.sessionLength * 60,\n          timerLabel: \"Session\"\n        });\n        this.playBeep();\n      }\n    }\n  }\n\n  countdown() {\n    this.setState(prevState => {\n      return {\n        timer: prevState.timer - 1\n      };\n    });\n  }\n\n  reset() {\n    this.pauseBeep();\n    this.setState({\n      breakLength: 5,\n      sessionLength: 25,\n      timer: 1500,\n      start: false,\n      timerLabel: \"Session\"\n    });\n    this.state.intervalID && this.state.intervalID.cancel();\n  }\n\n  playBeep() {\n    const beep = document.getElementById(\"beep\");\n    beep.play();\n  }\n\n  pauseBeep() {\n    const beep = document.getElementById(\"beep\");\n    beep.pause();\n    beep.currentTime = 0;\n  }\n\n  render() {\n    return (\n      <div>\n        <br />\n        <h1 id=\"title\">Pomodoro Clock</h1>\n        <p id=\"timer-label\">{this.state.timerLabel}</p>\n        <div id=\"time-left\">{this.clock()}</div>\n        <div class=\"row\">\n          <div class=\"col-6\">\n            <p id=\"break-label\">Break Length</p>\n            <p id=\"break-length\">{this.state.breakLength}</p>\n            <div class=\"break-button\">\n              <p id=\"break-decrement\" onClick={this.breakDec}>\n                <i class=\"fas fa-minus\" />\n              </p>\n\n              <p id=\"break-increment\" onClick={this.breakInc}>\n                <i class=\"fas fa-plus\" />\n              </p>\n            </div>\n          </div>\n\n          <div class=\"col-6\">\n            <p id=\"session-label\">Session Length</p>\n\n            <p id=\"session-length\">{this.state.sessionLength}</p>\n\n            <div class=\"session-button\">\n              <p id=\"session-decrement\" onClick={this.sessionDec}>\n                <i class=\"fas fa-minus\" />\n              </p>\n\n              <p id=\"session-increment\" onClick={this.sessionInc}>\n                <i class=\"fas fa-plus\" />\n              </p>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"row\">\n          <div class=\"col-12\">\n            <div class=\"start-reset-btn\">\n              <p id=\"start-stop\" onClick={this.startPause}>\n                <i class=\"fa fa-play\" /> <i class=\"fa fa-pause\" />\n              </p>\n\n              <p id=\"reset\" onClick={this.reset}>\n                <i class=\"fas fa-undo\" />\n              </p>\n            </div>\n          </div>\n        </div>\n        <div>\n          <audio id=\"beep\" src=\"https://goo.gl/65cBl1\" />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}